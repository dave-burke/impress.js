/*
    We start with a good ol' reset.
    That's the one by Eric Meyer http://meyerweb.com/eric/tools/css/reset/

    You can probably argue if it is needed here, or not, but for sure it
    doesn't do any harm and gives us a fresh start.
*/

html, body, div, span, applet, object, iframe,
h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code,
del, dfn, em, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,
b, u, i, center,
dl, dt, dd, ol, ul, li,
fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td,
article, aside, canvas, details, embed,
figure, figcaption, footer, header, hgroup,
menu, nav, output, ruby, section, summary,
time, mark, audio, video {
    margin: 0;
    padding: 0;
    border: 0;
    font-size: 100%;
    font: inherit;
    vertical-align: baseline;
    color: white;
}

/* HTML5 display-role reset for older browsers */
article, aside, details, figcaption, figure,
footer, header, hgroup, menu, nav, section {
    display: block;
}
body {
    line-height: 1;
}
blockquote, q {
    quotes: none;
}
blockquote:before, blockquote:after,
q:before, q:after {
    content: '';
    content: none;
}

table {
    border-collapse: collapse;
    border-spacing: 0;
}

/*
    Now here is when interesting things start to appear.

    We set up <body> styles with default font and nice gradient in the background.
    And yes, there is a lot of repetition there because of -prefixes but we don't
    want to leave anybody behind.
*/
body {
    font-family: sans-serif;
    min-height: 740px;

    background: rgb(215, 215, 215);
    /*background: -webkit-gradient(radial, 50% 50%, 0, 50% 50%, 500, from(rgb(240, 240, 240)), to(rgb(190, 190, 190)));*/
    /*background: -webkit-radial-gradient(rgb(240, 240, 240), rgb(190, 190, 190));*/
    background:    -moz-radial-gradient(rgb(0, 82, 119), rgb(6, 126, 187));
    /*background:     -ms-radial-gradient(rgb(240, 240, 240), rgb(190, 190, 190));*/
    /*background:      -o-radial-gradient(rgb(240, 240, 240), rgb(190, 190, 190));*/
    /*background:         radial-gradient(rgb(240, 240, 240), rgb(190, 190, 190));*/
}

/*
    Now let's bring some text styles back ...
*/
b, strong { font-weight: bold }
i, em { font-style: italic }

/*
    ... and give links a nice look.
*/
a {
    color: inherit;
    text-decoration: none;
    padding: 0 0.1em;
    background: rgba(255,255,255,0.5);
    text-shadow: -1px -1px 2px rgba(100,100,100,0.9);
    border-radius: 0.2em;

    -webkit-transition: 0.5s;
    -moz-transition:    0.5s;
    -ms-transition:     0.5s;
    -o-transition:      0.5s;
    transition:         0.5s;
}

a:hover,
a:focus {
    background: rgba(255,255,255,1);
    text-shadow: -1px -1px 2px rgba(100,100,100,0.5);
}

/*
    Because the main point behind the impress.js demo is to demo impress.js
    we display a fallback message for users with browsers that don't support
    all the features required by it.

    All of the content will be still fully accessible for them, but I want
    them to know that they are missing something - that's what the demo is
    about, isn't it?

    And then we hide the message, when support is detected in the browser.
*/

.fallback-message {
    font-family: sans-serif;
    line-height: 1.3;

    width: 780px;
    padding: 10px 10px 0;
    margin: 20px auto;

    border: 1px solid #E4C652;
    border-radius: 10px;
    background: #EEDC94;
}

.fallback-message p {
    margin-bottom: 10px;
}

.impress-supported .fallback-message {
    display: none;
}

/*
    Now let's style the presentation steps.

    We start with basics to make sure it displays correctly in everywhere ...
*/

.step {
    position: relative;
    width: 900px;
    padding: 40px;
    margin: 20px auto;

    -webkit-box-sizing: border-box;
    -moz-box-sizing:    border-box;
    -ms-box-sizing:     border-box;
    -o-box-sizing:      border-box;
    box-sizing:         border-box;

    font-size: 48px;
    text-align: center;
    line-height: 1.5;
}

/*
    In fact, we can hide the mouse cursor itself too, when mouse isn't used.
*/
body.impress-mouse-timeout {
    cursor: none;
}

#x {
	position: fixed;
	top: 0%;
	left: 44%;
	color: red;
	font-size: 500%;
	font-weight: bold;
	text-align: center;
}
#x.hidden {
	visibility: hidden;
}

.columns {
	padding-bottom: 0.25em;
	background-color: black;
	border: 5px solid gold;
	border-radius: 10px;
	display: flex;
	justify-content: space-around;
}
h3 {
	text-align: center;
	font-weight: bold;
}
.card {
	margin-bottom: 1em;
	/* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#5eb6f7+68,134ba7+100 */
	background: #5eb6f7; /* Old browsers */
	background: -moz-linear-gradient(top, #5eb6f7 68%, #134ba7 100%); /* FF3.6-15 */
	background: -webkit-linear-gradient(top, #5eb6f7 68%,#134ba7 100%); /* Chrome10-25,Safari5.1-6 */
	background: linear-gradient(to bottom, #5eb6f7 68%,#134ba7 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#5eb6f7', endColorstr='#134ba7',GradientType=0 ); /* IE6-9 */
	border: 5px double white;
	color: white;
	text-align: left;
	font-size: 50%;
}
.card .contents {
	padding: 0;
	display: flex;
}
.card .text {
	margin-left: 0.5em;
	flex-grow: 1;
}
.card .percent {
	/* Permalink - use to edit and share this gradient: http://colorzilla.com/gradient-editor/#3d6fd1+45,00378f+100 */
	background: #3d6fd1; /* Old browsers */
	background: -moz-linear-gradient(top, #3d6fd1 45%, #00378f 100%); /* FF3.6-15 */
	background: -webkit-linear-gradient(top, #3d6fd1 45%,#00378f 100%); /* Chrome10-25,Safari5.1-6 */
	background: linear-gradient(to bottom, #3d6fd1 45%,#00378f 100%); /* W3C, IE10+, FF16+, Chrome26+, Opera12+, Safari7+ */
	filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#3d6fd1', endColorstr='#00378f',GradientType=0 ); /* IE6-9 */
	border: 3px inset white;
	width: 2em;
	text-align: center;
}

.card.hidden .contents {
	visibility: hidden;
}

.rules {
	text-align: left;
}

#main .columns {
    opacity: 0;

    -webkit-transition: opacity 1s;
    -moz-transition:    opacity 1s;
    -ms-transition:     opacity 1s;
    -o-transition:      opacity 1s;
    transition:         opacity 1s;
}
#main.present .columns {
	opacity: 1;
}

#rules1 {
    opacity: 0;

    -webkit-transition: opacity 1s;
    -moz-transition:    opacity 1s;
    -ms-transition:     opacity 1s;
    -o-transition:      opacity 1s;
    transition:         opacity 1s;
}
#rules1.present {
	opacity: 1;
}

/*
    And as the last thing there is a workaround for quite strange bug.
    It happens a lot in Chrome. I don't remember if I've seen it in Firefox.

    Sometimes the element positioned in 3D (especially when it's moved back
    along Z axis) is not clickable, because it falls 'behind' the <body>
    element.

    To prevent this, I decided to make <body> non clickable by setting
    pointer-events property to `none` value.
    Value if this property is inherited, so to make everything else clickable
    I bring it back on the #impress element.

    If you want to know more about `pointer-events` here are some docs:
    https://developer.mozilla.org/en/CSS/pointer-events

    There is one very important thing to notice about this workaround - it makes
    everything 'unclickable' except what's in #impress element.

    So use it wisely ... or don't use at all.
*/
.impress-enabled                          { pointer-events: none }
.impress-enabled #impress                 { pointer-events: auto }
.impress-enabled #impress-toolbar         { pointer-events: auto }
.impress-enabled #impress-console-button  { pointer-events: auto }
